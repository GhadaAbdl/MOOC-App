<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_profil_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\ProfilBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_profil_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\ProfilBundle\\Controller\\HomeController::HomeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_profil_alluser' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\ProfilBundle\\Controller\\HomeController::alluserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/alluser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_profil_otheruser' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\ProfilBundle\\Controller\\HomeController::otheruserAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/otheruser',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_profil_addorganism' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\ProfilBundle\\Controller\\HomeController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/addorganism',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_profil_disable' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\ProfilBundle\\Controller\\HomeController::disableAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/disable',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_profil_certifuser' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\ProfilBundle\\Controller\\HomeController::certifuserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/certifuser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/app/example',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hwi_oauth_service_redirect' => array (  0 =>   array (    0 => 'service',  ),  1 =>   array (    '_controller' => 'HWI\\Bundle\\OAuthBundle\\Controller\\ConnectController::redirectToServiceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'service',    ),    1 =>     array (      0 => 'text',      1 => '/connect',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hwi_oauth_connect' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HWI\\Bundle\\OAuthBundle\\Controller\\ConnectController::connectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mail_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'MoocMailBundle:Default:index',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'my_app_mail_succ' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\MailBundle\\Controller\\MailController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/succ',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'my_app_mail_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\MailBundle\\Controller\\MailController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'my_app_mail_sendpage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\MailBundle\\Controller\\MailController::sendMailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sendmail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/home',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_affichage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_videoconference' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\videoconferenceController::videoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/videoconference',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_videoconferenceShow' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\videoconferenceController::videoshowAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/videoList',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_videoconferenceEdit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\videoconferenceController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/home/videoEdit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_videoconferenceDelete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\videoconferenceController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/home/videoDelete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_videoconferenceParticipate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\videoconferenceController::participateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/home/participate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_videoconferenceRecherche' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\coursesController::CourSearchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/rechercheCour',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_about' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\DefaultController::aboutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/about',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_terms' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\DefaultController::termAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/terms',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_videoconferenceYoutube' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\videoconferenceController::videoyoutubeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/home/videoy',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_videoconferenceShowApp' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\videoconferenceController::videoshowAppAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/videoListApp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_videoconferenceRechercheVideo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\videoconferenceController::VideoSearchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_videoconferenceRechercheVideoApp' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\videoconferenceController::VideoSearchAppAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/searchApp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pidev_mooc_videoconferenceStat' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\MoocBundle\\Controller\\StatVideoController::StatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/stat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_redirect' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::redirectAction',    'route' => 'sonata_admin_dashboard',    'permanent' => 'true',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CoreController::dashboardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/dashboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_retrieve_form_element' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:retrieveFormFieldElementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/get-form-field-element',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_append_form_element' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:appendFormFieldElementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/append-form-field-element',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_short_object_information' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:getShortObjectDescriptionAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'html|json',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'html|json',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/admin/core/get-short-object-description',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_set_object_field_value' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:setObjectFieldValueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/set-object-field-value',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CoreController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_admin_retrieve_autocomplete_items' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:retrieveAutocompleteItemsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/get-autocomplete-items',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_category_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'admin.category',    '_sonata_name' => 'admin_pi_category_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/category/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_category_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'admin.category',    '_sonata_name' => 'admin_pi_category_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/category/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_category_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'admin.category',    '_sonata_name' => 'admin_pi_category_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/category/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_category_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'admin.category',    '_sonata_name' => 'admin_pi_category_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/pi/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_category_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'admin.category',    '_sonata_name' => 'admin_pi_category_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/pi/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_category_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'admin.category',    '_sonata_name' => 'admin_pi_category_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/pi/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_category_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'admin.category',    '_sonata_name' => 'admin_pi_category_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/category/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_blogpost_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'admin.blog_post',    '_sonata_name' => 'admin_pi_blogpost_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/blogpost/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_blogpost_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'admin.blog_post',    '_sonata_name' => 'admin_pi_blogpost_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/blogpost/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_blogpost_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'admin.blog_post',    '_sonata_name' => 'admin_pi_blogpost_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/blogpost/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_blogpost_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'admin.blog_post',    '_sonata_name' => 'admin_pi_blogpost_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/pi/blogpost',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_blogpost_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'admin.blog_post',    '_sonata_name' => 'admin_pi_blogpost_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/pi/blogpost',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_blogpost_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'admin.blog_post',    '_sonata_name' => 'admin_pi_blogpost_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/pi/blogpost',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_blogpost_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'admin.blog_post',    '_sonata_name' => 'admin_pi_blogpost_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/blogpost/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_users_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'admin.users',    '_sonata_name' => 'admin_pi_users_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/users/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_users_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'admin.users',    '_sonata_name' => 'admin_pi_users_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/users/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_users_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'admin.users',    '_sonata_name' => 'admin_pi_users_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/users/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_users_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'admin.users',    '_sonata_name' => 'admin_pi_users_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/pi/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_users_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'admin.users',    '_sonata_name' => 'admin_pi_users_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/pi/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_users_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'admin.users',    '_sonata_name' => 'admin_pi_users_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/pi/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_users_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'admin.users',    '_sonata_name' => 'admin_pi_users_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/users/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_courses_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'admin.courses',    '_sonata_name' => 'admin_pi_courses_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/courses/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_courses_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'admin.courses',    '_sonata_name' => 'admin_pi_courses_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/courses/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_courses_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'admin.courses',    '_sonata_name' => 'admin_pi_courses_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/courses/batch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_courses_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'admin.courses',    '_sonata_name' => 'admin_pi_courses_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/pi/courses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_courses_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'admin.courses',    '_sonata_name' => 'admin_pi_courses_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/pi/courses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_courses_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'admin.courses',    '_sonata_name' => 'admin_pi_courses_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/pi/courses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_pi_courses_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'admin.courses',    '_sonata_name' => 'admin_pi_courses_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/pi/courses/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pi_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'PiBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/admin/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'accueil' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PiBundle\\Controller\\UsersController::chartAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/accueil',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'test' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PiBundle\\Controller\\UsersController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/test',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajout_organisme' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PiBundle\\Controller\\UsersController::AccepterOrganismeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/accueil',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'profil_organisme' => array (  0 =>   array (    0 => 'surname',  ),  1 =>   array (    '_controller' => 'PiBundle\\Controller\\UsersController::ProfilOrganismeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'surname',    ),    1 =>     array (      0 => 'text',      1 => '/admin/profil',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_user_liste' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PiBundle\\Controller\\UsersController::ListeUsersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/profil',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_quizz_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Mooc\\QuizzBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/quizz/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_quizz_add' => array (  0 =>   array (    0 => 'id_chapter',  ),  1 =>   array (    '_controller' => 'Mooc\\QuizzBundle\\Controller\\QuizzController::addQuizzAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_chapter',    ),    1 =>     array (      0 => 'text',      1 => '/quizz/addquizz',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_quizz_addnm' => array (  0 =>   array (    0 => 'id_course',    1 => 'id_chapter',    2 => 'chapterNumber',  ),  1 =>   array (    '_controller' => 'Mooc\\QuizzBundle\\Controller\\QuizzController::addQuizzNonMandatoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chapterNumber',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_chapter',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_course',    ),    3 =>     array (      0 => 'text',      1 => '/quizz/addquizznm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_question_add' => array (  0 =>   array (    0 => 'id_course',    1 => 'id_chapter',    2 => 'chapterNumber',  ),  1 =>   array (    '_controller' => 'Mooc\\QuizzBundle\\Controller\\QuizzController::addQuestionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chapterNumber',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_chapter',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_course',    ),    3 =>     array (      0 => 'text',      1 => '/quizz/addquestion/(idQuizz}/(questionNumber}',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_question_addM' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\QuizzBundle\\Controller\\QuizzController::addQuestionMAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/quizz/addquestion/(idQuizz}/(questionNumber}',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_quizz_pass' => array (  0 =>   array (    0 => 'idChapter',  ),  1 =>   array (    '_controller' => 'Mooc\\QuizzBundle\\Controller\\QuizzController::getQuizzAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idChapter',    ),    1 =>     array (      0 => 'text',      1 => '/quizz/passquizz',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_quizznm_pass' => array (  0 =>   array (    0 => 'idChapter',  ),  1 =>   array (    '_controller' => 'Mooc\\QuizzBundle\\Controller\\QuizzController::getNmQuizzAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idChapter',    ),    1 =>     array (      0 => 'text',      1 => '/quizz/passquizznm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_certification' => array (  0 =>   array (    0 => 'note',    1 => 'idQuizz',  ),  1 =>   array (    '_controller' => 'Mooc\\QuizzBundle\\Controller\\CertificationController::addCertificationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idQuizz',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'note',    ),    2 =>     array (      0 => 'text',      1 => '/quizz/certification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_result' => array (  0 =>   array (    0 => 'note',  ),  1 =>   array (    '_controller' => 'Mooc\\QuizzBundle\\Controller\\CertificationController::resultAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'note',    ),    1 =>     array (      0 => 'text',      1 => '/quizz/result',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_quizz_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\QuizzBundle\\Controller\\QuizzController::listQuizzAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/quizz/listquizz',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_quizzcontent_list' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\QuizzBundle\\Controller\\QuizzController::listQuestionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/quizz/listquestions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_quizz_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\QuizzBundle\\Controller\\QuizzController::updateQuizzAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/quizz/updatequizz',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_question_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\QuizzBundle\\Controller\\QuizzController::updateQuestionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/quizz/updatequestion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'followcourse' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\FollowcourseController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/followcourse/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'followcourse_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\FollowcourseController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/followcourse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'followcourse_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\FollowcourseController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/followcourse/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'followcourse_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\FollowcourseController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/followcourse/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'followcourse_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\FollowcourseController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/followcourse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'followcourse_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\FollowcourseController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/followcourse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'followcourse_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\FollowcourseController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/followcourse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'courses' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CoursesController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/courses/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'courses_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CoursesController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/courses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'courses_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CoursesController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/courses/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'courses_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CoursesController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/courses/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'courses_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CoursesController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/courses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'courses_Validation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CoursesController::ValidationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/courses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'courses_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CoursesController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/courses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'courses_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CoursesController::deleteAction',  ),  2 =>   array (    '_method' => 'get|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/courses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'courses_follow' => array (  0 =>   array (    0 => 'idCourse',    1 => 'idUser',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CoursesController::followCourseAction',  ),  2 =>   array (    '_method' => 'get|delete',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idUser',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idCourse',    ),    2 =>     array (      0 => 'text',      1 => '/courses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentscourse' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CommentscourseController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commentscourse/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentscourse_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CommentscourseController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/commentscourse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentscourse_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CommentscourseController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commentscourse/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentscourse_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CommentscourseController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commentscourse/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentscourse_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CommentscourseController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/commentscourse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentscourse_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CommentscourseController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/commentscourse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentscourse_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CommentscourseController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/commentscourse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'chapter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\ChapterController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/chapter/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'chapter_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\ChapterController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/chapter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'chapter_new' => array (  0 =>   array (    0 => 'chapternumber',    1 => 'idCourse',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\ChapterController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idCourse',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chapternumber',    ),    2 =>     array (      0 => 'text',      1 => '/chapter/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'chapter_create' => array (  0 =>   array (    0 => 'chapternumber',    1 => 'idCourse',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\ChapterController::createAction',  ),  2 =>   array (    '_method' => 'post|get',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idCourse',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chapternumber',    ),    2 =>     array (      0 => 'text',      1 => '/chapter/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'chapter_Finishcreate' => array (  0 =>   array (    0 => 'chapternumber',    1 => 'idCourse',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\ChapterController::FinishcreateAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idCourse',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chapternumber',    ),    2 =>     array (      0 => 'text',      1 => '/chapter/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'chapter_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\ChapterController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/chapter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'chapter_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\ChapterController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/chapter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'chapter_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\ChapterController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/chapter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_course_Stat' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\StatController::StatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Stat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mooc_course_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'MyCourses_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CoursesController::showMyCoursesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/MyCourses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'newfinalChapter' => array (  0 =>   array (    0 => 'num_chapitre',    1 => 'idCourse',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\ChapterController::finalchapterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/finalnew',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idCourse',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'num_chapitre',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'CoursesByType' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Mooc\\CourseBundle\\Controller\\CoursesController::FindByTypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/coursesbtype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_welcome' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\WelcomeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::securityCheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'acme_demo_secured_hello' => array (  0 =>   array (  ),  1 =>   array (    'name' => 'World',    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_secured_hello' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/secured/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_secured_hello_admin' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloadminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/secured/hello/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_hello' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
